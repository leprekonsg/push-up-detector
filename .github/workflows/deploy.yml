name: Deploy STF Exercise Counter

on:
  push:
    branches: [ main ]

# Required permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Find and update HTML file
      run: |
        # Find the HTML file (could be index.html or another name)
        HTML_FILE=$(find . -maxdepth 1 -name "*.html" | head -1)
        
        if [ -z "$HTML_FILE" ]; then
          echo "‚ùå ERROR: No HTML file found in repository!"
          ls -la
          exit 1
        fi
        
        echo "Found HTML file: $HTML_FILE"
        
        # Replace placeholders in the HTML file with actual Firebase config
        sed -i 's/__FIREBASE_API_KEY__/${{ secrets.FIREBASE_API_KEY }}/g' "$HTML_FILE"
        sed -i 's/__FIREBASE_AUTH_DOMAIN__/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g' "$HTML_FILE"
        sed -i 's/__FIREBASE_PROJECT_ID__/${{ secrets.FIREBASE_PROJECT_ID }}/g' "$HTML_FILE"
        sed -i 's/__FIREBASE_STORAGE_BUCKET__/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' "$HTML_FILE"
        sed -i 's/__FIREBASE_MESSAGING_SENDER_ID__/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' "$HTML_FILE"
        sed -i 's/__FIREBASE_APP_ID__/${{ secrets.FIREBASE_APP_ID }}/g' "$HTML_FILE"
        
        # Rename to index.html if it's not already
        if [ "$HTML_FILE" != "./index.html" ]; then
          cp "$HTML_FILE" index.html
          echo "Copied $HTML_FILE to index.html"
        fi
    
    - name: Verify Firebase configuration was injected
      run: |
        echo "=== Files in directory ==="
        ls -la
        echo ""
        echo "=== Checking if Firebase config was properly injected ==="
        if grep -q "__FIREBASE_API_KEY__" index.html; then
          echo "‚ùå ERROR: Firebase placeholders were not replaced!"
          echo "Please check if your GitHub Secrets are properly set."
          echo ""
          echo "Current secrets status:"
          echo "FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY != '' && 'SET' || 'NOT SET' }}"
          echo "FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN != '' && 'SET' || 'NOT SET' }}"
          echo "FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID != '' && 'SET' || 'NOT SET' }}"
          exit 1
        else
          echo "‚úÖ Firebase configuration successfully injected into HTML"
        fi
        
        echo ""
        echo "=== Firebase config section in HTML (first 20 lines) ==="
        grep -A 10 -B 2 "window.firebaseConfig" index.html || echo "Config section not found, showing file structure:"
        head -30 index.html
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Deployment Success
      if: success()
      run: |
        echo "üöÄ Deployment successful!"
        echo "Your app is available at: ${{ steps.deployment.outputs.page_url }}"